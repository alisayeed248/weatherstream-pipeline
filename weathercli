#!/bin/bash
# WeatherStream Pipeline CLI

if docker compose version >/dev/null 2>&1; then
  DOCKER_COMPOSE_CMD="docker compose"
elif docker-compose --version >/dev/null 2>&1; then
  DOCKER_COMPOSE_CMD="docker-compose"
else
  echo "Error: Docker Compose not found. Please install Docker Compose."
  exit 1
fi

case "$1" in
  start)
    echo "Starting WeatherStream Pipeline..."
    if [ -z "$OPENWEATHER_API_KEY" ]; then
        echo "‚ùå Error: OpenWeatherMap API key not set"
        echo ""
        echo "Please set your API key first:"
        echo "  export OPENWEATHER_API_KEY=your_key_here"
        echo ""
        echo "Get a free API key at: https://openweathermap.org/api"
        exit 1
    fi
    $DOCKER_COMPOSE_CMD up -d
    echo "Services started! All components are running."
    echo ""
    echo "Available commands:"
    echo "  ./weathercli list-cities"
    echo "  ./weathercli add-city <cityname> <interval>"
    echo "  ./weathercli remove-city <cityname>"
    ;;
  stop)
    echo "Stopping WeatherStream Pipeline..."
    $DOCKER_COMPOSE_CMD down
    echo "All services stopped."
    ;;
  list-cities)
    curl -s http://localhost:8080/api/cities | jq '.' 2>/dev/null || curl -s http://localhost:8080/api/cities
    ;;
  add-city)
    if [ -z "$2" ] || [ -z "$3" ]; then
      echo "Usage: ./weathercli add-city <cityname> <interval>"
      echo "Example: ./weathercli add-city paris 15"
      exit 1
    fi
    curl -X POST http://localhost:8080/api/cities \
      -H "Content-Type: application/json" \
      -d "{\"cityName\": \"$2\", \"intervalMinutes\": $3}"
    echo ""
    ;;
  remove-city)
    if [ -z "$2" ]; then
      echo "Usage: ./weathercli remove-city <cityname>"
      exit 1
    fi
    curl -X DELETE "http://localhost:8080/api/cities/$2"
    echo ""
    ;;
  *)
    echo "WeatherStream Pipeline CLI"
    echo "Usage: ./weathercli {start|stop|list-cities|add-city|remove-city}"
    echo ""
    echo "Commands:"
    echo "  start                          - Start all services"
    echo "  stop                           - Stop all services"
    echo "  list-cities                    - Show all tracked cities"
    echo "  add-city <name> <interval>     - Add city with interval in minutes"
    echo "  remove-city <name>             - Remove city from tracking"
    ;;
esac
